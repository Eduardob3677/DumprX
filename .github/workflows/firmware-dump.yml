name: DumprX Firmware Processing

on:
  workflow_dispatch:
    inputs:
      firmware_url:
        description: 'Firmware URL to process'
        required: true
        type: string
      git_provider:
        description: 'Git provider for repository upload'
        required: true
        type: choice
        options:
          - github
          - gitlab
        default: github
      github_token:
        description: 'GitHub Token (required for GitHub provider)'
        required: false
        type: string
      github_orgname:
        description: 'GitHub Organization (optional)'
        required: false
        type: string
      gitlab_token:
        description: 'GitLab Token (required for GitLab provider)'
        required: false
        type: string
      gitlab_group:
        description: 'GitLab Group (optional)'
        required: false
        type: string
      gitlab_instance:
        description: 'GitLab Instance (default: gitlab.com)'
        required: false
        type: string
        default: 'gitlab.com'
      telegram_token:
        description: 'Telegram Bot Token (optional)'
        required: false
        type: string
      telegram_chat_id:
        description: 'Telegram Chat ID (optional)'
        required: false
        type: string

jobs:
  process-firmware:
    runs-on: ubuntu-latest
    timeout-minutes: 480
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Free up disk space
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf "/usr/local/share/boost"
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        sudo apt-get remove -y '^aspnetcore-.*' '^dotnet-.*' '^llvm-.*' 'php.*'
        sudo apt-get autoremove -y
        sudo apt-get clean
        df -h
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        chmod +x setup.sh
        ./setup.sh
        
    - name: Configure Git
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        git config --global http.postBuffer 524288000
        git lfs install --global
        
    - name: Validate inputs
      run: |
        if [[ "${{ inputs.git_provider }}" == "github" && -z "${{ inputs.github_token }}" ]]; then
          echo "❌ GitHub token required for GitHub provider"
          exit 1
        elif [[ "${{ inputs.git_provider }}" == "gitlab" && -z "${{ inputs.gitlab_token }}" ]]; then
          echo "❌ GitLab token required for GitLab provider"
          exit 1
        fi
        
    - name: Setup authentication tokens
      run: |
        # GitHub configuration
        if [[ "${{ inputs.git_provider }}" == "github" && -n "${{ inputs.github_token }}" ]]; then
          echo "${{ inputs.github_token }}" > .github_token
          [[ -n "${{ inputs.github_orgname }}" ]] && echo "${{ inputs.github_orgname }}" > .github_orgname
        fi
        
        # GitLab configuration
        if [[ "${{ inputs.git_provider }}" == "gitlab" && -n "${{ inputs.gitlab_token }}" ]]; then
          echo "${{ inputs.gitlab_token }}" > .gitlab_token
          [[ -n "${{ inputs.gitlab_group }}" ]] && echo "${{ inputs.gitlab_group }}" > .gitlab_group
          [[ -n "${{ inputs.gitlab_instance }}" ]] && echo "${{ inputs.gitlab_instance }}" > .gitlab_instance
        fi
        
        # Telegram configuration
        [[ -n "${{ inputs.telegram_token }}" ]] && echo "${{ inputs.telegram_token }}" > .tg_token
        [[ -n "${{ inputs.telegram_chat_id }}" ]] && echo "${{ inputs.telegram_chat_id }}" > .tg_chat
        
    - name: Process firmware
      run: |
        python3 dumprx.py dump '${{ inputs.firmware_url }}' --output ./firmware_output
        
    - name: Cleanup sensitive files
      if: always()
      run: |
        rm -f .github_token .gitlab_token .tg_token .tg_chat .github_orgname .gitlab_group .gitlab_instance
        
    - name: Upload artifacts on failure
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: debug-logs
        path: |
          firmware_output/
          *.log
        retention-days: 7